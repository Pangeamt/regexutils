1) Matching names which consist of multiple words (applies to both first names and last names)
    Explanation by example: in the list of Spanish last names there are the names:
        -Dos
        -Santos
        -Dos Santos
    Current lazy solution:
        Only consider names consisting of one word (this guarantees that there is no overlap between ors)
    Proper solution:
        Extend spacyregex's name matcher to include the option of multi-token names

2) Complex problem: regexes with optional matches at the end (or beginning) result in incorrect matching
    due to spaces because there is no (straightforward) way to know whether the last optional word has
    been matched.
    If it was matched: look-ahead required to check for a space. If not: the last matched word should
    do the look-ahead. [If spaces are defined before the word instead of after the problem turns around,
    and the issue is at the beginning of the word]
    Example (outdated, since name matching is no longer done with regexes, but it serves to illustrate the problem):
    matching Spanish names consisting of 1 or 2 first names and 1 or 2 last names does not work:
        first-name optional-first-name second-name optional-second-name
        => does not match on "Jose Romero" or "Jose Romero ", but does match on "Jose Romero  "
            (or for example "Jose Romero es un hombre" is not matched on either, but
            "Jose Romero  es un hombre" is.)
        => The problem is the spaces, the way it is currently implemented, the word is optional, but the space separating it is not
    this works: first-name optional-first-name optional-second-name second-name
    However, the general problem remains unfixed: the first and last word of a multiword regex
    cannot be optional. For now this is solved lazily by explicitly assuring this is not the case.

